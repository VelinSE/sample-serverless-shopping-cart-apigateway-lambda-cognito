AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  auth-resources

  SAM Template for auth resources


Globals:
  Function:
    Timeout: 300

Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AWS::StackName}-UserPool
      AutoVerifiedAttributes:
        - email

  CognitoResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties:
      Identifier: "cart-api"
      Name: "My API Resource Server"
      UserPoolId: !Ref CognitoUserPool
      Scopes:
        - ScopeName: default
          ScopeDescription: "Default scope for M2M auth"

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      DependsOn: CognitoResourceServer
      ClientName: my-app
      GenerateSecret: true
      UserPoolId: !Ref CognitoUserPool
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - client_credentials
      AllowedOAuthScopes:
        - "cart-api/default"
      ExplicitAuthFlows:
        - ADMIN_NO_SRP_AUTH

  UserPoolSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: /serverless-shopping-cart-demo/auth/user-pool-id
      Value: !Ref CognitoUserPool

  UserPoolARNSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: /serverless-shopping-cart-demo/auth/user-pool-arn
      Value: !GetAtt CognitoUserPool.Arn

  UserPoolAppClientSSM:
    Type: AWS::SSM::Parameter
    Properties:
      Type: String
      Name: /serverless-shopping-cart-demo/auth/user-pool-client-id
      Value: !Ref UserPoolClient

Outputs:
  CognitoUserPoolId:
    Description: "Cognito User Pool ID"
    Value: !Ref CognitoUserPool

  CognitoAppClientId:
    Description: "Cognito App Client ID"
    Value: !Ref UserPoolClient